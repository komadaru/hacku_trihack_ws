rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	function isAuthenticated() {
    	return request.auth != null;
    }
    function isUserAuthenticated(userId) {
    	return request.auth.uid == userId;
    }
    function isMember(comId) {
    	return request.auth.uid in getMembers(comId);
    }
    function getMembers(comId) {
      return get(/databases/$(database)/documents/communities/$(comId)).data.users
    }
    function getComIdByDisId(disId) {
      return get(/databases/$(database)/documents/discussions/$(disId)).data.community
    }
    function isMemberOfCommunityWhichHas(disId){
      return request.auth.uid in getMembers(getComIdByDisId(disId))
    }
    function isParticipant(disId) {
      return request.auth.uid in resource.data.participants
    }
    
    match /users/{userId} {
      allow create, read: if isAuthenticated();
      allow update: if isUserAuthenticated(userId);
    }
    match /communities/{comId} {
    	allow create, read: if isAuthenticated();
      allow update: if isMember(comId);
    }
    match /discussions/{disId} {
      allow create: if isMember(request.resource.data.community)
      allow read: if isMemberOfCommunityWhichHas(disId)
      allow update: if isParticipant(disId)
    }
  }
}